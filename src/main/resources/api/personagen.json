{
  "openapi": "3.0.3",
  "info": {
    "title": "Swagger personagen - OpenAPI 3.0",
    "description": "This the API specification of personagen 2.0 usin openAPI 3.0 specification",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "apiteam@swagger.io"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.11"
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  },
  "servers": [
    {
      "url": "https://define-server"
    }
  ],
  "tags": [
    {
      "name": "documents",
      "description": "Everything about generating personal documents",
      "externalDocs": {
        "description": "Find out more",
        "url": "http://swagger.io"
      }
    },
    {
      "name": "bank",
      "description": "Everything about generating bank information",
      "externalDocs": {
        "description": "Find out more",
        "url": "http://swagger.io"
      }
    },
    {
      "name": "profile",
      "description": "Everything about generating data for person profiles",
      "externalDocs": {
        "description": "Find out more",
        "url": "http://swagger.io"
      }
    },
    {
      "name": "text",
      "description": "Everything about generating texts",
      "externalDocs": {
        "description": "Find out more",
        "url": "http://swagger.io"
      }
    }
  ],
  "paths": {
    "/document/nif":{
      "get":{
        "tags": [
          "documents"
        ],
        "summary": "Get a list of random NIF documents",
        "description": "Get a list of random NIF document.",
        "operationId": "getNif",
        "parameters": [
          {
            "name": "results",
            "in": "query",
            "description": "Number of results desired (max 100)",
            "required": false,
            "explode": true,
            "schema": {
              "type": "integer",
              "default": "1"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items":{
                    "$ref": "#/components/schemas/Nif"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/document/nie":{
      "get":{
        "tags": [
          "documents"
        ],
        "summary": "Get a list of random NIE documents",
        "description": "Get a list of random NIE documents.",
        "operationId": "getNie",
        "parameters": [
          {
            "name": "results",
            "in": "query",
            "description": "Number of results desired (max 100)",
            "required": false,
            "explode": true,
            "schema": {
              "type": "integer",
              "default": "1"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items":{
                    "$ref": "#/components/schemas/Nie"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/document/cif":{
      "get":{
        "tags": [
          "documents"
        ],
        "summary": "Get a list of random CIF documents",
        "description": "Get a list of random CIF document.",
        "operationId": "getCif",
        "parameters": [
          {
            "name": "results",
            "in": "query",
            "description": "Number of results desired (max 100)",
            "required": false,
            "explode": true,
            "schema": {
              "type": "integer",
              "default": "1"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items":{
                    "$ref": "#/components/schemas/Cif"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/bank/iban":{
      "get":{
        "tags": [
          "bank"
        ],
        "summary": "Get a list of random IBAN numbers",
        "description": "Get a list of random IBAN numbers.",
        "operationId": "getIban",
        "parameters": [
          {
            "name": "results",
            "in": "query",
            "description": "Number of results desired (max 100)",
            "required": false,
            "explode": true,
            "schema": {
              "type": "integer",
              "default": "1"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items":{
                    "$ref": "#/components/schemas/Iban"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/bank/card":{
      "get":{
        "tags": [
          "bank"
        ],
        "summary": "Get random data of a Card",
        "description": "Get random data of a Card.",
        "operationId": "getCard",
        "parameters": [
          {
            "name": "results",
            "in": "query",
            "description": "Number of results desired (max 100)",
            "required": false,
            "explode": true,
            "schema": {
              "type": "integer",
              "default": "1"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items":{
                    "$ref": "#/components/schemas/Card"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Nif":{
        "type": "string",
        "example": "81869245D"
      },
      "Nie":{
        "type": "string",
        "example": "P0664623F"
      },
      "Cif":{
        "type": "string",
        "example": "P0664623F"
      },
      "Iban":{
        "type": "object",
        "properties": {
          "iban":{
            "type": "string",
            "example": "ES8520466243108769164002"
          },
          "ibanFormatted":{
            "type": "string",
            "example": "ES85 2046 6243 1087 6916 4002"
          }
        }
      },
      "Card":{
        "type": "object",
        "properties": {
          "cardNumber":{
            "type": "string",
            "example": "4047132665165641"
          },
          "cardNumberFormatted":{
            "type": "string",
            "example": "4047 1326 6516 5641"
          },
          "expirationDate":{
            "type": "string",
            "format": "date",
            "example": "08/24"
          },
          "cvv":{
            "type": "string",
            "example": "387"
          }
        }
      }
    },
    "securitySchemes": {
      "petstore_auth": {
        "type": "oauth2",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://petstore3.swagger.io/oauth/authorize",
            "scopes": {
              "write:pets": "modify pets in your account",
              "read:pets": "read your pets"
            }
          }
        }
      },
      "api_key": {
        "type": "apiKey",
        "name": "api_key",
        "in": "header"
      }
    }
  }
}